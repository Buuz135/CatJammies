plugins {
    id 'net.minecraftforge.gradle' version '[6.0.14,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

group = 'com.buuz135'
version = "1.20.1-1.6.1"

java {
    archivesBaseName = 'catjammies'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: "official", version: "1.20.1"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg '-mixin.config=catjammies.mixins.json'

            mods {
                catjammies {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg '-mixin.config=catjammiess.mixins.json'

            mods {
                catjammies {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'catjammies', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                catjammies {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {

    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "catjammies.refmap.json"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "catjammies",
                "Specification-Vendor"    : "Buuz135",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Buuz135",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": 'catjammies.mixins.json'
        ])
    }
}

jar.finalizedBy('reobfJar')
